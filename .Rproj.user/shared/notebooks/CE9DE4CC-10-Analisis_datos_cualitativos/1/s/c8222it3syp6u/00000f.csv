"0","############################################################################"
"0","# Función generar tablas y gráfico a partir de modelo log-lineal"
"0",""
"0","generar_solucion <- function(modelo) {"
"0","  # Extraer la información del modelo"
"0","  summary_modelo <- summary(modelo)"
"0",""
"0","tipo_output <- c(""html"") # pdf, html, docx"
"0","knitr::opts_knit$set(rmarkdown.pandoc.to = tipo_output)"
"0",""
"0","  # Crear una tabla con la información relevante de las pruebas de validez"
"0","  tabla_informacion <- data.frame("
"0","    Statistic = c(""Likelihood Ratio"", ""Pearson""),"
"0","    X2 = c(summary_modelo$tests[1, ""X^2""], summary_modelo$tests[2, ""X^2""]),"
"0","    df = c(summary_modelo$tests[1, ""df""], summary_modelo$tests[2, ""df""]),"
"0","    P_value = c(summary_modelo$tests[1, ""P(> X^2)""], summary_modelo$tests[2, ""P(> X^2)""]),"
"0","    stringsAsFactors = FALSE"
"0","  )"
"0","  "
"0","  # Formatear la tabla usando kable"
"0","      if (knitr::opts_knit$get(""rmarkdown.pandoc.to"") == ""html"") {"
"0","    independencia_valida_tab <- tabla_informacion %>%"
"0","    kable(caption =""Validación del modelo"","
"0","          format = ""html"","
"0","          col.names = c(""Prueba"", ""Estadístico"", ""Grados Libertad"", ""P-valor"")) %>%"
"0","    kable_styling(full_width = F,"
"0","                  bootstrap_options = c(""striped"", ""bordered"", ""condensed""),"
"0","                  position = ""center"","
"0","                  font_size = 12) %>%"
"0","    row_spec(0, bold= T, align = ""c"")"
"0","      }else if (knitr::opts_knit$get(""rmarkdown.pandoc.to"") == ""docx"") {"
"0","           independencia_valida_tab <- tabla_informacion %>%"
"0","             kable(caption =""Validación del modelo"","
"0","          format = ""html"","
"0","          col.names = c(""Prueba"", ""Estadístico"", ""Grados Libertad"", ""P-valor"")) "
"0","      }  "
"0","  # Extraer los coeficientes del modelo"
"0","  independencia_df <- extraer_coeficientes(modelo)"
"0","  "
"0","  # Formatear la tabla de coeficientes usando kable"
"0","        if (knitr::opts_knit$get(""rmarkdown.pandoc.to"") == ""html"") {"
"0","  independencia_coef_tab <- independencia_df %>%"
"0","    kable(format = ""html"","
"0","          caption =""Coeficientes del modelo"","
"0","          digits = 3) %>%"
"0","    kable_styling(full_width = F,"
"0","                  bootstrap_options = c(""striped"", ""bordered"", ""condensed""),"
"0","                  position = ""center"","
"0","                  font_size = 12) %>%"
"0","    row_spec(0, bold= T, align = ""c"")"
"0","        }else if (knitr::opts_knit$get(""rmarkdown.pandoc.to"") == ""docx"") {"
"0","  independencia_coef_tab <- independencia_df %>%"
"0","    kable(format = ""html"","
"0","          caption =""Coeficientes del modelo"","
"0","          digits = 3)"
"0","        }"
"0","  # Crear el gráfico de mosaico con los residuos y mostrarlo en pantalla directamente"
"0","  plot(modelo, panel = mosaic,"
"0","       main=""Residuos del modelo"","
"0","       residuals_type = c(""deviance""),"
"0","       gp = shading_hcl,"
"0","       gp_args = list(interpolate = c(0, 1)),"
"0","       main_gp = gpar(fontsize = 14),"
"0","       sub_gp = gpar(fontsize = 9),"
"0","       labeling_args = list(gp_labels = gpar(fontsize = 7)))"
"0","  "
"0","  # Guardar las tablas en una lista"
"0","  solucion_nombre <- paste0(""solucion_"", deparse(substitute(modelo)))"
"0","  solucion_lista <- list("
"0","    Informacion = independencia_valida_tab,"
"0","    Coeficientes = independencia_coef_tab"
"0","  )"
"0","  "
"0","  assign(solucion_nombre, solucion_lista, envir = .GlobalEnv)"
"0","}"
"0","##########################################################################"
"0",""

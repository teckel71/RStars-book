"0","# Cargas de cada componente."
"0",""
"0","scores <- componentes$x[,1] #tantas columnas como componentes retenidas"
"0","scores_df <- as.data.frame(scores)"
"0","scores_df <- cbind(scores_df,muestra_so)"
"0",""
"0","tipo_output <- c(""docx"") # pdf, html, docx"
"0","knitr::opts_knit$set(rmarkdown.pandoc.to = tipo_output)"
"0",""
"0","if (knitr::opts_knit$get(""rmarkdown.pandoc.to"") == ""html"") {"
"0","    knitr.table.format = ""html"""
"0","scores_df %>%"
"0","  arrange(desc(scores)) %>%"
"0","kable(caption = ""Puntuaciones de las componentes obtenidas"","
"0","        col.names = c(""Empresa"", ""Puntuación"", ""Resultado"", ""F. Propios"","
"0","                      ""Margen"", ""Solvencia""),"
"0","        format.args = list(decimal.mark = ""."", digits = 4))  %>%"
"0","  kable_styling(full_width = F, bootstrap_options = ""striped"","
"0","                ""bordered"", ""condensed"","
"0","                position = ""center"", font_size = 12) %>%"
"0","  row_spec(0, bold= T, align = ""c"") %>%"
"0","  row_spec(1:(nrow(scores_df)), bold= F, align = ""c"") %>%"
"0","  column_spec(1, bold = TRUE, extra_css = ""text-align: left;"")"
"0","} else if (knitr::opts_knit$get(""rmarkdown.pandoc.to"") == ""docx"") {"
"0","scores_df %>%"
"0","  arrange(desc(scores)) %>%kable(caption = ""Puntuaciones de las componentes obtenidas"","
"0","        col.names = c(""Empresa"", ""Puntuación"", ""Resultado"", ""F. Propios"","
"0","                      ""Margen"", ""Solvencia""),"
"0","        format.args = list(decimal.mark = ""."", digits = 4))"
"0","}"

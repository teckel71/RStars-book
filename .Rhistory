# Dividir las variables en bloques
for (i in seq(1, ncol(interestelar_100), variables_por_bloque)) {
# Comentario: No mostramos el nombre del bloque
print(summary(interestelar_100[, i:min(i + variables_por_bloque - 1, ncol(interestelar_100))]))
cat("\n")
}
rm (i)
rm (variables_por_bloque)
rm (df)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
# Cargando dplyr
library (dplyr)
#Seleccionando variables
interestelar_100 <-select(interestelar_100, -FJUR)
library (dplyr)
df <- select(interestelar_100, everything())
# Número de variables por bloque
variables_por_bloque <- 3
# Dividir las variables en bloques
for (i in seq(1, ncol(interestelar_100), variables_por_bloque)) {
# Comentario: No mostramos el nombre del bloque
print(summary(interestelar_100[, i:min(i + variables_por_bloque - 1, ncol(interestelar_100))]))
cat("\n")
}
rm (i)
rm (variables_por_bloque)
rm (df)
df <-select(interestelar_100, ACTIVO, FPIOS, LIQUIDEZ)
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 4
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(i)
rm(df)
rm(columnas_por_bloque)
interestelar_100A <-select(interestelar_100, ACTIVO, FPIOS, LIQUIDEZ)
library (dplyr)
df <- select(interestelar_100A, everything())
# Número de variables por bloque
variables_por_bloque <- 3
# Dividir las variables en bloques
for (i in seq(1, ncol(interestelar_100A), variables_por_bloque)) {
# Comentario: No mostramos el nombre del bloque
print(summary(interestelar_100A[, i:min(i + variables_por_bloque - 1, ncol(interestelar_100A))]))
cat("\n")
}
rm (i)
rm (variables_por_bloque)
rm (df)
interestelar_100_replica <-select(interestelar_100, everything())
#definir df
df<-select(filter(interestelar_100, RES >= 500), RES, RENECO)
# Número de columnas por bloque
columnas_por_bloque <- 2
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
interestelar_100B <-select(filter(interestelar_100,
RES >= 500 & RENECO < 40),
RES, RENECO, ACTIVO)
df <- select(interestelar_100B, everything())
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
interestelar_100C <- select(interestelar_100, RENECO, EFLO, ACTIVO)
interestelar_100C <- arrange(interestelar_100C, RENECO)
df<-interestelar_100C
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
interestelar_100D <- arrange(interestelar_100C, desc(RENECO))
df<-interestelar_100D
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
interestelar_100E <- arrange(interestelar_100C, EFLO, desc(RENECO))
df<- interestelar_100E
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
rm(i)
# Renombrando variables
interestelar_100 <- rename(interestelar_100, SOLVE = SOLVENCIA)
# Añadiendo variables como transformacion de otras variables
interestelar_100 <- mutate (interestelar_100, RATIO = RES / ACTIVO)
library (dplyr)
df <- select(interestelar_100, everything())
# Número de variables por bloque
variables_por_bloque <- 4
# Dividir las variables en bloques
for (i in seq(1, ncol(interestelar_100), variables_por_bloque)) {
# Comentario: No mostramos el nombre del bloque
print(summary(interestelar_100[, i:min(i + variables_por_bloque - 1, ncol(interestelar_100))]))
cat("\n")
}
rm (i)
rm (variables_por_bloque)
rm (df)
interestelar_100 <- arrange(interestelar_100, ACTIVO)
interestelar_100 <- mutate (interestelar_100, ACTIVOS_ACUM = cumsum(ACTIVO))
df<- select(interestelar_100, ACTIVO, ACTIVOS_ACUM)
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
rm(i)
interestelar_100 <- mutate(interestelar_100,
DIM = cut(ACTIVO,
breaks = c(-Inf, 54, 216, Inf),
labels = c("REDUCIDA", "MEDIA", "ALTA")))
df <-select(interestelar_100, ACTIVO, DIM)
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
rm(i)
#Extrayendo información de las variables de un data frame
summarise(interestelar_100, RENFIN_media = mean(RENFIN))
interestelar_100 %>%
group_by(DIM) %>%
summarise(RENFIN_media = mean(RENFIN))
# Exportando data frame a formato R (.RData)
save(interestelar_100, file = "interestelar_100.RData")
# Borrando el data frame interestelar_100
rm(interestelar_100)
# Importando el archivo .RData con los mismos datos
load("interestelar_100.RData")
summary (interestelar_100)
# Borrando el data frame interestelar_100
rm(interestelar_100)
# Importando el archivo .RData con los mismos datos
load("interestelar_100.RData")
library (dplyr)
df <- select(interestelar_100, everything())
# Número de variables por bloque
variables_por_bloque <- 4
# Dividir las variables en bloques
for (i in seq(1, ncol(interestelar_100), variables_por_bloque)) {
# Comentario: No mostramos el nombre del bloque
print(summary(interestelar_100[, i:min(i + variables_por_bloque - 1, ncol(interestelar_100))]))
cat("\n")
}
rm (i)
rm (variables_por_bloque)
rm (df)
bookdown::render_book("index.Rmd", "bookdown::bs4_book")
## Generando gráficos con {ggplot2}
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library (ggplot2)
library(gtExtras)
# Importando datos desde Excel
interestelar_100 <- read_excel("interestelar_100.xlsx", sheet = "Datos", na = c("n.d."))
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
## Generando gráficos con {ggplot2}
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library (ggplot2)
library(gtExtras)
# Importando datos desde Excel
interestelar_100 <- read_excel("interestelar_100.xlsx",
sheet = "Datos",
na = c("n.d."))
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
## Generando gráficos con {ggplot2}
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library (ggplot2)
library(gtExtras)
# Importando datos desde Excel
interestelar_100 <- read_excel("interestelar_100.xlsx",
sheet = "Datos",
na = c("n.d."))
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
# Histograma
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram()
# Histograma
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram()
## Generando gráficos con {ggplot2}
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library (ggplot2)
library(gtExtras)
# Importando datos desde Excel
interestelar_100 <- read_excel("interestelar_100.xlsx", sheet = "Datos", na = c("n.d."))
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
# Histograma
ggplot(data = interestelar_100, map = (x = LIQUIDEZ)) +
geom_histogram()
ggplot(data = interestelar_100, x = LIQUIDEZ) +
geom_histogram()
# Histograma
ggplot(data = interestelar_100) +
geom_histogram( aes(x = LIQUIDEZ))
## Generando gráficos con {ggplot2}
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library (ggplot2)
library(gtExtras)
# Importando datos desde Excel
interestelar_100 <- read_excel("interestelar_100.xlsx",
sheet = "Datos",
na = c("n.d."))
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
# Histograma
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram()
# Histograma
ggplot(data = interestelar_100) +
geom_histogram( aes(x = LIQUIDEZ))
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = 40)
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nclass.Sturges(x[is.finite(x)]))
# Nº de bins según Sturges (con NA/Inf fuera)
x <- interestelar_100$LIQUIDEZ
nbins <- nclass.Sturges(x[is.finite(x)])
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins)
# Nº de bins según Sturges (con NA/Inf fuera)
x <- interestelar_100$LIQUIDEZ
nbins <- nclass.Sturges(x[is.finite(interestelar_100$LIQUIDEZ)])
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins)
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins, colour = "red", fill = "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Frecuencias")
datos_df_graph
# Histograma
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram()
# Histograma
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram()
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = 20)
# Nº de bins según Sturges (con NA/Inf fuera)
nbins <- nclass.Sturges(x[is.finite(interestelar_100$LIQUIDEZ)])
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins)
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins, colour = "red", aes(fill = EFLO)) +
scale_fill_brewer(palette = "Oranges") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Frecuencias")
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_density(colour = "red", fill = "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Densidad")
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_density(aes(fill = EFLO), colour = "red", alpha = 0.70, ) +
scale_fill_brewer(palette = "Oranges") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Densidad")
## Generando gráficos con {ggplot2}
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library (ggplot2)
library(gtExtras)
# Importando datos desde Excel
interestelar_100 <- read_excel("interestelar_100.xlsx",
sheet = "Datos",
na = c("n.d."))
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
# Histograma
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram()
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = 20)
# Nº de bins según Sturges (con NA/Inf fuera)
nbins <- nclass.Sturges(x[is.finite(interestelar_100$LIQUIDEZ)])
# Nº de bins según Sturges (con NA/Inf fuera)
nbins <- nclass.Sturges(interestelar_100$LIQUIDEZ[is.finite(interestelar_100$LIQUIDEZ)])
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins)
## Generando gráficos con {ggplot2}
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library (ggplot2)
library(gtExtras)
# Importando datos desde Excel
interestelar_100 <- read_excel("interestelar_100.xlsx",
sheet = "Datos",
na = c("n.d."))
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
# Histograma
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram()
ggplot(data = interestelar_100) +     # Mismo gráfico, con aes en geom y sin map
geom_histogram( aes(x = LIQUIDEZ))
ggplot(data = eolica_100, map = aes(x = RENECO)) +
geom_histogram(bins = 20)      # cambiando número de bins
# Nº de bins según Sturges (con NA/Inf fuera)
nbins <- nclass.Sturges(interestelar_100$LIQUIDEZ[is.finite(interestelar_100$LIQUIDEZ)])
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins)
## Generando gráficos con {ggplot2}
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library (ggplot2)
library(gtExtras)
# Importando datos desde Excel
interestelar_100 <- read_excel("interestelar_100.xlsx",
sheet = "Datos",
na = c("n.d."))
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
# Histograma
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram()
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = 20)
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_density(colour = "red", fill = "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Densidad")
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_density(aes(fill = EFLO), colour = "red", alpha = 0.70, ) +
scale_fill_brewer(palette = "Oranges") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Densidad")
help Rbase
ggplot(data = interestelar_100, map = (aes(y = LIQUIDEZ))) +
geom_boxplot(fill= "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar") +
ylab("Ratio de liquidez")
ggplot(data = interestelar_100, map = (aes(y = LIQUIDEZ))) +
geom_boxplot(fill= "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar") +
ylab("Ratio de liquidez")
ggplot(data = interestelar_100, map = (aes(y = RES))) +
geom_boxplot(fill= "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar") +
ylab("Ratio de liquidez")
ggplot(data = interestelar_100, map = (aes(y = LIQUIDEZ))) +
geom_boxplot(fill= "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar") +
ylab("Ratio de liquidez")
ggplot(data = interestelar_100, map = (aes(y = LIQUIDEZ))) +
geom_boxplot(fill= "orange") +
ggtitle("RESULTADO DEL EJERCICIO", subtitle = "Transporte Interestelar") +
ylab("Resultado (miles de PAVOs)")
ggplot(data = interestelar_100, map = (aes(y = RES))) +
geom_boxplot(fill= "orange") +
ggtitle("RESULTADO DEL EJERCICIO", subtitle = "Transporte Interestelar") +
ylab("Resultado (miles de PAVOs)")
bookdown::render_book("index.Rmd", "bookdown::bs4_book")
bookdown::render_book("index.Rmd", "bookdown::bs4_book")
## Generando gráficos con {ggplot2}
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library (ggplot2)
library(gtExtras)
# Importando datos desde Excel
interestelar_100 <- read_excel("interestelar_100.xlsx",
sheet = "Datos",
na = c("n.d."))
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
# Histograma
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram()
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = 20)
# Nº de bins según Sturges (con NA/Inf fuera)
nbins <- nclass.Sturges(interestelar_100$LIQUIDEZ[is.finite(interestelar_100$LIQUIDEZ)])
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins)
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins, colour = "red", fill = "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Frecuencias")
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins, colour = "red", aes(fill = EFLO)) +
scale_fill_brewer(palette = "Oranges") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Frecuencias")
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_density(colour = "red", fill = "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Densidad")
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_density(aes(fill = EFLO), colour = "red", alpha = 0.70, ) +
scale_fill_brewer(palette = "Oranges") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar") +
xlab("Liquidez (ratio)") +
ylab("Densidad")
ggplot(data = interestelar_100, map = (aes(y = LIQUIDEZ))) +
geom_boxplot(fill= "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar") +
ylab("Ratio de liquidez")
ggplot(data = interestelar_100, map = (aes(y = RES))) +
geom_boxplot(fill= "orange") +
ggtitle("RESULTADO DEL EJERCICIO", subtitle = "Transporte Interestelar") +
ylab("Resultado (miles de PAVOs)")
ggplot(data = eolica_100, map = (aes(x = "", y = RENECO))) +
geom_boxplot(fill = "orange") +
stat_summary(fun = "mean",
geom = "point",
size = 3,
col = "darkblue") +
ggtitle("RENTABILIDAD ECONÓMICA", subtitle = "100 empresas eólicas") +
ylab("Rentabilidad Económica (%)")
ggplot(data = interestelar_100, map = (aes(x = "", y = RES))) +
geom_boxplot(fill = "orange") +
stat_summary(fun = "mean",
geom = "point",
size = 3,
col = "darkblue") +
ggtitle("RESULTADO DEL EJERCICIO", subtitle = "Transporte Interestelar") +
ylab("Resultado (miles de PAVOs)")

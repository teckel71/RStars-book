for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(i)
rm(df)
rm(columnas_por_bloque)
interestelar_100A <-select(interestelar_100, ACTIVO, FPIOS, LIQUIDEZ)
library (dplyr)
df <- select(interestelar_100A, everything())
# Número de variables por bloque
variables_por_bloque <- 3
# Dividir las variables en bloques
for (i in seq(1, ncol(interestelar_100A), variables_por_bloque)) {
# Comentario: No mostramos el nombre del bloque
print(summary(interestelar_100A[, i:min(i + variables_por_bloque - 1, ncol(interestelar_100A))]))
cat("\n")
}
rm (i)
rm (variables_por_bloque)
rm (df)
interestelar_100_replica <-select(interestelar_100, everything())
# Seleccionando casos
select(filter(interestelar_100, RES >= 500), RES)
#definir df
df<-select(filter(interestelar_100, RES >= 500), RES)
# Número de columnas por bloque
columnas_por_bloque <- 5
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
# Seleccionando casos
select(filter(interestelar_100, RES >= 500), RES, RENECO)
#definir df
df<-select(filter(interestelar_100, RES >= 500), RES, RENECO)
# Número de columnas por bloque
columnas_por_bloque <- 4
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
#definir df
df<-select(filter(interestelar_100, RES >= 500), RES, RENECO)
# Número de columnas por bloque
columnas_por_bloque <- 2
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
interestelar_100B <-select(filter(interestelar_100,
RES >= 500 & RENECO < 40),
RES, RENECO, ACTIVO)
interestelar_100B
interestelar_100B <-select(filter(interestelar_100,
RES >= 500 & RENECO < 40),
RES, RENECO, ACTIVO)
df <- select(interestelar_100B, everything())
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
# Ordenando casos
interestelar_100C <- select(interestelar_100, RENECO, EFLO, ACTIVO)
arrange(interestelar_100C, RENECO)
interestelar_100C <- select(interestelar_100, RENECO, EFLO, ACTIVO)
arrange(interestelar_100C, RENECO)
df<-interestelar_100C
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
# Ordenando casos
interestelar_100C <- select(interestelar_100, RENECO, EFLO, ACTIVO)
interestelar_100C <- arrange(interestelar_100C, RENECO)
interestelar_100C
interestelar_100C <- select(interestelar_100, RENECO, EFLO, ACTIVO)
interestelar_100C <- arrange(interestelar_100C, RENECO)
df<-interestelar_100C
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
interestelar_100D <- select(interestelar_100C, everything())
arrange(interestelar_100D, desc(RENECO))
interestelar_100D <- select(interestelar_100C, everything())
interestelar_100D <- arrange(interestelar_100D, desc(RENECO))
interestelar_100D
interestelar_100D <- select(interestelar_100C, everything())
interestelar_100D <- arrange(interestelar_100D, desc(RENECO))
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
interestelar_100D <- select(interestelar_100C, everything())
interestelar_100D <- arrange(interestelar_100D, desc(RENECO))
df<-interestelar_100D
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
interestelar_100D <- arrange(interestelar_100C, desc(RENECO))
interestelar_100D
interestelar_100D <- arrange(interestelar_100C, desc(RENECO))
df<-interestelar_100D
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
interestelar_100E <- arrange(interestelar_100C, EFLO, desc(RENECO))
interestelar_100E
interestelar_100E <- arrange(interestelar_100C, EFLO, desc(RENECO))
df<- interestelar_100E
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
rm(i)
interestelar_100E <- arrange(interestelar_100C, EFLO, desc(RENECO))
df<- interestelar_100E
df <- dplyr::slice_head(df, n = 15)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
rm(i)
interestelar_100E <- arrange(interestelar_100C, EFLO, desc(RENECO))
df<- interestelar_100E
df <- dplyr::slice_head(df, n = 20)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
rm(i)
interestelar_100E <- arrange(interestelar_100C, EFLO, desc(RENECO))
df<- interestelar_100E
df <- dplyr::slice_head(df, n = 25)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
rm(i)
interestelar_100E <- arrange(interestelar_100C, EFLO, desc(RENECO))
df<- interestelar_100E
df <- dplyr::slice_head(df, n = 30)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
rm(i)
interestelar_100 <- arrange(interestelar_100, ACTIVO)
interestelar_100 <- mutate (interestelar_100, ACTIVOS_ACUM = cumsum(ACTIVO))
df<- select(interestelar_100, ACTIVO, ACTIVOS_ACUM)
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
rm(i)
interestelar_100 <- interestelar_100 %>%
mutate(DIM = cut(ACTIVO,
breaks = c(-Inf, 54, 216, Inf),
labels = c("REDUCIDA", "MEDIA", "ALTA"))) %>%
select(ACTIVO, DIM)
interestelar_100 <- interestelar_100 %>%
mutate(DIM = cut(ACTIVO,
breaks = c(-Inf, 54, 216, Inf),
labels = c("REDUCIDA", "MEDIA", "ALTA")))
interestelar_100 %>% select(ACTIVO, DIM)
interestelar_100 %>%
group_by(DIM) %>%
summarise(RENFIN_media = mean(RENFIN))
#Extrayendo información de las variables de un data frame
summarise(interestelar_100, RENFIN_media = mean(RENFIN))
x <- c(1,3,5,8)
x
y <- c(2:6)
y
length(y)
genero<-c("Mujer","Hombre")
genero
class(genero)
Z <- c(1,2,NA,2,8)
x[3]
x[2:4]
x[c(1,4)]
a <- matrix(c(1,2,3,4,5,6,7,8,9),nrow=3)
a
dim(a)
a[2,3]
a[1:2,2:3]
a[,c(1,3)]
a[c(1,3),]
a*a
a%*%a
Peso<-c(68,75,88)
Altura<-c(1.6,1.8,1.9)
Cl.ojos<-c("azules","marrones","marrones")
datos<-data.frame(Peso,Altura,Cl.ojos)
datos
names(datos)
datos$Cl.ojos
datos$Peso
nrow(datos)
ncol(datos)
datos[,2]
datos$Altura
Cl.ojosF <- factor(Cl.ojos)
Cl.ojos
Cl.ojosF
notas <- factor(
c("Aprobado", "Notable", "Sobresaliente", "Suspenso"),
levels = c("Suspenso", "Aprobado", "Notable", "Sobresaliente"),
ordered = TRUE
)
notas
mi_lista <- list(
nombre = "María",
edad = 21,
notas = c(8.5, 9.0, 7.2),
aprobado = TRUE
)
mi_lista
mi_lista$notas
mi_lista[[3]]
## Importando datos de las empresas R-Stars
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library(gtExtras)
# DATOS
interestelar_100 <- read_excel("interestelar_100.xlsx", sheet = "Datos", na = c("n.d."))
library (dplyr)
df <- select(interestelar_100, everything())
# Número de variables por bloque
variables_por_bloque <- 4
# Dividir las variables en bloques
for (i in seq(1, ncol(interestelar_100), variables_por_bloque)) {
# Comentario: No mostramos el nombre del bloque
print(summary(interestelar_100[, i:min(i + variables_por_bloque - 1, ncol(interestelar_100))]))
cat("\n")
}
rm (i)
rm (variables_por_bloque)
rm (df)
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
library (dplyr)
df <- select(interestelar_100, everything())
# Número de variables por bloque
variables_por_bloque <- 4
# Dividir las variables en bloques
for (i in seq(1, ncol(interestelar_100), variables_por_bloque)) {
# Comentario: No mostramos el nombre del bloque
print(summary(interestelar_100[, i:min(i + variables_por_bloque - 1, ncol(interestelar_100))]))
cat("\n")
}
rm (i)
rm (variables_por_bloque)
rm (df)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
# Cargando dplyr
library (dplyr)
#Seleccionando variables
interestelar_100 <-select(interestelar_100, -FJUR)
library (dplyr)
df <- select(interestelar_100, everything())
# Número de variables por bloque
variables_por_bloque <- 3
# Dividir las variables en bloques
for (i in seq(1, ncol(interestelar_100), variables_por_bloque)) {
# Comentario: No mostramos el nombre del bloque
print(summary(interestelar_100[, i:min(i + variables_por_bloque - 1, ncol(interestelar_100))]))
cat("\n")
}
rm (i)
rm (variables_por_bloque)
rm (df)
df <-select(interestelar_100, ACTIVO, FPIOS, LIQUIDEZ)
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 4
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(i)
rm(df)
rm(columnas_por_bloque)
interestelar_100A <-select(interestelar_100, ACTIVO, FPIOS, LIQUIDEZ)
library (dplyr)
df <- select(interestelar_100A, everything())
# Número de variables por bloque
variables_por_bloque <- 3
# Dividir las variables en bloques
for (i in seq(1, ncol(interestelar_100A), variables_por_bloque)) {
# Comentario: No mostramos el nombre del bloque
print(summary(interestelar_100A[, i:min(i + variables_por_bloque - 1, ncol(interestelar_100A))]))
cat("\n")
}
rm (i)
rm (variables_por_bloque)
rm (df)
interestelar_100_replica <-select(interestelar_100, everything())
#definir df
df<-select(filter(interestelar_100, RES >= 500), RES, RENECO)
# Número de columnas por bloque
columnas_por_bloque <- 2
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
interestelar_100B <-select(filter(interestelar_100,
RES >= 500 & RENECO < 40),
RES, RENECO, ACTIVO)
df <- select(interestelar_100B, everything())
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
interestelar_100C <- select(interestelar_100, RENECO, EFLO, ACTIVO)
interestelar_100C <- arrange(interestelar_100C, RENECO)
df<-interestelar_100C
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
interestelar_100D <- arrange(interestelar_100C, desc(RENECO))
df<-interestelar_100D
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
interestelar_100E <- arrange(interestelar_100C, EFLO, desc(RENECO))
df<- interestelar_100E
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
rm(i)
# Renombrando variables
interestelar_100 <- rename(interestelar_100, SOLVE = SOLVENCIA)
# Añadiendo variables como transformacion de otras variables
interestelar_100 <- mutate (interestelar_100, RATIO = RES / ACTIVO)
library (dplyr)
df <- select(interestelar_100, everything())
# Número de variables por bloque
variables_por_bloque <- 4
# Dividir las variables en bloques
for (i in seq(1, ncol(interestelar_100), variables_por_bloque)) {
# Comentario: No mostramos el nombre del bloque
print(summary(interestelar_100[, i:min(i + variables_por_bloque - 1, ncol(interestelar_100))]))
cat("\n")
}
rm (i)
rm (variables_por_bloque)
rm (df)
interestelar_100 <- arrange(interestelar_100, ACTIVO)
interestelar_100 <- mutate (interestelar_100, ACTIVOS_ACUM = cumsum(ACTIVO))
df<- select(interestelar_100, ACTIVO, ACTIVOS_ACUM)
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
rm(i)
interestelar_100 <- mutate(interestelar_100,
DIM = cut(ACTIVO,
breaks = c(-Inf, 54, 216, Inf),
labels = c("REDUCIDA", "MEDIA", "ALTA")))
df <-select(interestelar_100, ACTIVO, DIM)
df <- dplyr::slice_head(df, n = 10)  # Solo primeras 10 filas
# Número de columnas por bloque
columnas_por_bloque <- 3
# Dividir las columnas en bloques y mostrar los datos en la consola
for (i in seq(1, ncol(df), columnas_por_bloque)) {
print(df[, i:min(i + columnas_por_bloque - 1, ncol(df))])
cat("\n")
}
rm(df)
rm(columnas_por_bloque)
rm(i)
#Extrayendo información de las variables de un data frame
summarise(interestelar_100, RENFIN_media = mean(RENFIN))
interestelar_100 %>%
group_by(DIM) %>%
summarise(RENFIN_media = mean(RENFIN))
# Exportando data frame a formato R (.RData)
save(interestelar_100, file = "interestelar_100.RData")
# Borrando el data frame interestelar_100
rm(interestelar_100)
# Importando el archivo .RData con los mismos datos
load("interestelar_100.RData")
summary (interestelar_100)
# Borrando el data frame interestelar_100
rm(interestelar_100)
# Importando el archivo .RData con los mismos datos
load("interestelar_100.RData")
library (dplyr)
df <- select(interestelar_100, everything())
# Número de variables por bloque
variables_por_bloque <- 4
# Dividir las variables en bloques
for (i in seq(1, ncol(interestelar_100), variables_por_bloque)) {
# Comentario: No mostramos el nombre del bloque
print(summary(interestelar_100[, i:min(i + variables_por_bloque - 1, ncol(interestelar_100))]))
cat("\n")
}
rm (i)
rm (variables_por_bloque)
rm (df)
bookdown::render_book("index.Rmd", "bookdown::bs4_book")

xlab("Ratio de Liquidez") +
ylab("Resultado del ejercicio (miles PAVOS)")
ggMarginal(scatter_plus, type = "histogram", groupColour = T,
groupFill = T, position = "identity", alpha = 0.5)
scatter_plus <- ggplot(data = interestelar_100,
map = (aes(x = LIQUIDEZ, y = RES))) +
geom_point(aes(col = EFLO, size = SOLVENCIA), alpha = 0.7) +
geom_label_repel(aes(label = row.names(interestelar_100)),
size = 2,
color = "black",
alpha = 0.5,
max.overlaps = 20,      # solapamientos permitidos
box.padding = 0.1,       # cajas más compactas
point.padding = 0.05,
force = 3,
max.time = 2,
seed = 123) +
ggtitle("RENTABILIDAD ECONÓMICA vs FINANCIERA",
subtitle = "Transporte Interestelar") +
xlab("Ratio de Liquidez") +
ylab("Resultado del ejercicio (miles PAVOS)")
ggMarginal(scatter_plus, type = "histogram", groupColour = T,
groupFill = T, position = "identity", alpha = 0.5)
## Generando gráficos con {ggplot2}
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library (ggplot2)
library(gtExtras)
library (ggExtra)
library (ggrepel)
# Importando datos desde Excel
interestelar_100 <- read_excel("interestelar_100.xlsx",
sheet = "Datos",
na = c("n.d."))
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
# Histograma
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram()
ggplot(data = interestelar_100) +     # Mismo gráfico, con aes en geom y sin map
geom_histogram( aes(x = LIQUIDEZ))
ggplot(data = eolica_100, map = aes(x = RENECO)) +
geom_histogram(bins = 20)      # cambiando número de bins
## Generando gráficos con {ggplot2}
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library (ggplot2)
library(gtExtras)
library (ggExtra)
library (ggrepel)
# Importando datos desde Excel
interestelar_100 <- read_excel("interestelar_100.xlsx",
sheet = "Datos",
na = c("n.d."))
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
# Histograma
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram()
ggplot(data = interestelar_100) +     # Mismo gráfico, con aes en geom y sin map
geom_histogram( aes(x = LIQUIDEZ))
ggplot(data = interestelar_100, map = aes(x = RENECO)) +
geom_histogram(bins = 20)      # cambiando número de bins
nbins <- nclass.Sturges(interestelar_100$LIQUIDEZ[is.finite(interestelar_100$LIQUIDEZ)])
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins)
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins)        # número de bins de Sturges
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins, colour = "red", fill = "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Frecuencias")
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_histogram(bins = nbins, colour = "red", aes(fill = EFLO)) +
scale_fill_brewer(palette = "Oranges") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Frecuencias")
# Gráfico de densidad
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_density(colour = "red", fill = "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Densidad")
ggplot(data = interestelar_100, map = aes(x = LIQUIDEZ)) +
geom_density(aes(fill = EFLO), colour = "red", alpha = 0.70, ) +
scale_fill_brewer(palette = "Oranges") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar")+
xlab("Liquidez (ratio)") +
ylab("Densidad")
# Gráfico de caja (box-plot)
ggplot(data = interestelar_100, map = (aes(x = "", y = LIQUIDEZ))) +
geom_boxplot(fill= "orange") +
ggtitle("RATIO DE LIQUIDEZ", subtitle = "Transporte Interestelar") +
xlab("") +
ylab("Ratio de liquidez")
ggplot(data = interestelar_100, map = (aes(x = "", y = RES))) +
geom_boxplot(fill= "orange") +
ggtitle("RESULTADO DEL EJERCICIO", subtitle = "Transporte Interestelar") +
xlab("") +
ylab("Resultado (miles de PAVOs)")
ggplot(data = interestelar_100, map = (aes(x = "", y = RES))) +
geom_boxplot(fill = "orange") +
stat_summary(fun = "mean",
geom = "point",
size = 3,
col = "darkblue") +
ggtitle("RESULTADO DEL EJERCICIO", subtitle = "Transporte Interestelar") +
xlab("") +
ylab("Resultado (miles de PAVOs)")
ggplot(data = interestelar_100, map = (aes(x = EFLO, y = RES))) +
geom_boxplot(aes(fill = EFLO)) +
stat_summary(fun = "mean",
geom = "point",
size = 3,
col = "darkblue") +
stat_summary(fun = "mean",
geom = "line",
col = "darkblue",
map = (aes(group = TRUE))) +
scale_fill_brewer(palette = "Oranges") +
ggtitle("RESULTADO DEL EJERCICIO", subtitle = "Transporte Interestelar") +
xlab("") +
ylab("Resultado (miles de PAVOs)")
ggplot(data = interestelar_100, map = (aes(x = EFLO, y = RES))) +
geom_boxplot(aes(fill = EFLO), outlier.shape = NA) +
stat_summary(fun = "mean",
geom = "point",
size = 3,
col = "darkblue") +
stat_summary(fun = "mean",
geom = "line",
col = "darkblue",
map = (aes(group = TRUE))) +
geom_jitter(width = 0.1,
size = 1,
col = "darkred",
alpha = 0.40) +
scale_fill_brewer(palette = "Oranges") +
ggtitle("RESULTADO DEL EJERCICIO", subtitle = "Transporte Interestelar") +
xlab("") +
ylab("Resultado (miles de PAVOs)")
# Gráfico de dispersión o scatterplot
ggplot(data = interestelar_100, map = (aes(x = LIQUIDEZ, y = RES))) +
geom_point(color = "red", size = 2, alpha = 0.7) +
ggtitle("LIQUIDEZ vs RESULTADO DEL EJERCICIO",
subtitle = "Transporte Interestelar") +
xlab("Ratio de Liquidez") +
ylab("Resultado del ejercicio (miles PAVOs)")
ggplot(data = interestelar_100, map = (aes(x = LIQUIDEZ, y = RES))) +
geom_point(aes(col = EFLO), size = 2, alpha = 0.7) +
ggtitle("LIQUIDEZ vs RESULTADO DEL EJERCICIO",
subtitle = "Transporte Interestelar") +
xlab("Ratio de Liquidez") +
ylab("Resultado del ejercicio (miles PAVOS)")
scatter_plus <- ggplot(data = interestelar_100,
map = (aes(x = LIQUIDEZ, y = RES))) +
geom_point(aes(col = EFLO), size = 2, alpha = 0.7) +
ggtitle("LIQUIDEZ vs RESULTADO DEL EJERCICIO",
subtitle = "Transporte Interestelar") +
xlab("Ratio de Liquidez") +
ylab("Resultado del ejercicio (miles PAVOs)")
ggMarginal(scatter_plus, type = "histogram", groupColour = T,
groupFill = T, position = "identity", alpha = 0.5)
scatter_plus <- ggplot(data = interestelar_100,
map = (aes(x = LIQUIDEZ, y = RES))) +
geom_point(aes(col = EFLO, size = SOLVENCIA), alpha = 0.7) +
ggtitle("LIQUIDEZ vs RESULTADO DEL EJERCICIO",
subtitle = "Transporte Interestelar") +
xlab("Ratio de Liquidez") +
ylab("Resultado del ejercicio (miles PAVOs)")
ggMarginal(scatter_plus, type = "histogram", groupColour = T,
groupFill = T, position = "identity", alpha = 0.5)
scatter_plus <- ggplot(data = interestelar_100,
map = (aes(x = LIQUIDEZ, y = RES))) +
geom_point(aes(col = EFLO, size = SOLVENCIA), alpha = 0.7) +
geom_text(aes(label=row.names(interestelar_100)),
size=2, color="black", alpha = 0.7) +
ggtitle("LIQUIDEZ vs RESULTADO DEL EJERCICIO",
subtitle = "Transporte Interestelar") +
xlab("Ratio de Liquidez") +
ylab("Resultado del ejercicio (miles PAVOs)")
ggMarginal(scatter_plus, type = "histogram", groupColour = T,
groupFill = T, position = "identity", alpha = 0.5)
scatter_plus <- ggplot(data = interestelar_100,
map = (aes(x = LIQUIDEZ, y = RES))) +
geom_point(aes(col = EFLO, size = SOLVENCIA), alpha = 0.7) +
geom_label_repel(aes(label = row.names(interestelar_100)),
size = 2,
color = "black",
alpha = 0.5,
max.overlaps = 20,
box.padding = 0.1,
point.padding = 0.05,
force = 3,
max.time = 2,
seed = 123) +
ggtitle("LIQUIDEZ vs RESULTADO DEL EJERCICIO",
subtitle = "Transporte Interestelar") +
xlab("Ratio de Liquidez") +
ylab("Resultado del ejercicio (miles PAVOs)")
ggMarginal(scatter_plus, type = "histogram", groupColour = T,
groupFill = T, position = "identity", alpha = 0.5)
# Fin de script :)
bookdown::render_book("index.Rmd", "bookdown::bs4_book")
# Script para la construcción de tablas de datos
# y trabajo con distribuciones de frecuencias univariantes.
#
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library(gtExtras)
library (knitr)
library (kableExtra)
library (dplyr)
library(DescTools)
library(moments)
library (ggplot2)
## DATOS
# Importando datos desde Excel
interestelar_100 <- read_excel("interestelar_100.xlsx",
sheet = "Datos",
na = c("n.d."))
interestelar_100 <- data.frame(interestelar_100, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
datos_df_graph
# Script para la construcción de tablas de datos
# y trabajo con distribuciones de frecuencias univariantes.
#
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library(gtExtras)
library (knitr)
library (kableExtra)
library (dplyr)
library(DescTools)
library(moments)
library (ggplot2)
## DATOS
# Importando datos desde Excel
datos <- read_excel("trabajadores.xlsx",
sheet = "Datos",
na = c("n.d."))
datos <- data.frame(interestelar_100, row.names = 1)
datos <- data.frame(datos, row.names = 1)
# Script para la construcción de tablas de datos
# y trabajo con distribuciones de frecuencias univariantes.
#
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library(gtExtras)
library (knitr)
library (kableExtra)
library (dplyr)
library(DescTools)
library(moments)
library (ggplot2)
## DATOS
# Importando datos desde Excel
datos <- read_excel("trabajadores.xlsx",
sheet = "Datos",
na = c("n.d."))
datos <- data.frame(datos, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(interestelar_100)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(datos)
datos_df_graph
knitr.table.format = "html"
datos %>%
kable(caption = "Trabajadores de Shuttlepod Movers",
col.names = c("Trabajador", "Salario", "Nivel de estudios",
"Departamento")) %>%
kable_styling(full_width = F, bootstrap_options = "striped", "bordered",
"condensed", position = "center", font_size = 11) %>%
row_spec(0, bold= T, align = "c") %>%
row_spec(1:(nrow(datos)), bold= F, align = "c")
# Script para la construcción de tablas de datos
# y trabajo con distribuciones de frecuencias univariantes.
#
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library(gtExtras)
library (knitr)
library (kableExtra)
library (dplyr)
library(DescTools)
library(moments)
library (ggplot2)
## DATOS
# Importando datos desde Excel
datos <- read_excel("trabajadores.xlsx",
sheet = "Datos",
na = c("n.d."))
datos <- data.frame(datos, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(datos)
datos_df_graph
knitr.table.format = "html"
datos %>%
kable(caption = "Trabajadores de Shuttlepod Movers",
col.names = c("Trabajador", "Salario", "Nivel de estudios",
"Departamento")) %>%
kable_styling(full_width = F, bootstrap_options = "striped", "bordered",
"condensed", position = "center", font_size = 11) %>%
row_spec(0, bold= T, align = "c") %>%
row_spec(1:(nrow(datos)), bold= F, align = "c")
datos <- datos %>% arrange(SALARIO, row.names(datos))
conteo <- table(datos$SALARIO)
conteo
conteo_df <- as.data.frame(conteo)
conteo_df
colnames(conteo_df) <- c("Valor", "Frecuencia")
N <- sum(conteo_df$Frecuencia)
conteo_df$Frecuencia_acum <- cumsum(conteo_df$Frecuencia)
conteo_df$Frecuencia_R <- conteo_df$Frecuencia / N
conteo_df$Frecuencia_R_acum <- cumsum(conteo_df$Frecuencia_R)
conteo_df %>%
kable(caption = "Distribución de frecuencias de los salarios de la empresa",
col.names = c("x(i) = Salario", "Frecuencia absoluta n(i)",
"Frecuencia absoluta acum. N(i)", "Frecuencia relativa f(i)",
"Frecuencia relativa acum. F(i)"),
format.args = list(decimal.mark = ".", digits = 2)) %>%
kable_styling(full_width = F, bootstrap_options = "striped", "bordered", "condensed", position = "center", font_size = 11) %>%
row_spec(0, bold= T, align = "c") %>%
row_spec(1:(nrow(conteo_df)), bold= F, align = "c")
k <- nclass.Sturges(datos$SALARIO)
datos$intervalos <- cut(datos$SALARIO, breaks = k, include.lowest = TRUE)
levels(datos$intervalos)
k <- nclass.Sturges(datos$SALARIO)
datos$intervalos <- cut(datos$SALARIO, breaks = k, include.lowest = TRUE)
levels(datos$intervalos)
conteo_intervalos <- table(datos$intervalos)
conteo_intervalos_df <- as.data.frame(conteo_intervalos)
colnames(conteo_intervalos_df) <- c("Intervalo", "Frecuencia")
marca_clase <- sapply(strsplit(as.character(conteo_intervalos_df$Intervalo), ",|\\[|\\(|\\]"), function(x) {
mean(as.numeric(x[2:3]))
})
conteo_intervalos_df$marca_clase <- marca_clase
conteo_intervalos_df <- conteo_intervalos_df %>% select(Intervalo, marca_clase, Frecuencia)
N_agre <- sum(conteo_intervalos_df$Frecuencia)
conteo_intervalos_df$Frecuencia_acum <- cumsum(conteo_intervalos_df$Frecuencia)
conteo_intervalos_df$Frecuencia_R <- conteo_intervalos_df$Frecuencia / N_agre
conteo_intervalos_df$Frecuencia_R_acum <- cumsum(conteo_intervalos_df$Frecuencia_R)
conteo_intervalos_df %>%
kable(caption = "Distribución de frecuencias agrupadas en intervalos de los salarios de la empresa",
col.names = c("Intervalo salarial", "Marca de clase x(i)", "Frecuencia absoluta n(i)",
"Frecuencia absoluta acum. N(i)", "Frecuencia relativa f(i)",
"Frecuencia relativa acum. F(i)"),
format.args = list(decimal.mark = ".", digits = 2)) %>%
kable_styling(full_width = F, bootstrap_options = "striped", "bordered", "condensed", position = "center", font_size = 11) %>%
row_spec(0, bold= T, align = "c") %>%
row_spec(1:(nrow(conteo_intervalos_df)), bold= F, align = "c")
media <- mean(datos$SALARIO)
media
mediana <- median(datos$SALARIO)
mediana
moda <- Mode(datos$SALARIO)
moda
cuartiles <- quantile(datos$SALARIO, probs = c(0.25, 0.5, 0.75))
cuartiles
varianza <- var(datos$SALARIO)*(N-1)/N # recordar que la frecuencia total N ya fue calculada
varianza
desv <- varianza ^ (1/2)
desv
cuasivarianza <- var (datos$SALARIO)
cuasivarianza
cvariacion <- desv / abs(media)
cvariacion
asimetria <- skewness(datos$SALARIO)
asimetria
ggplot(data = datos, map = aes(x = SALARIO)) +
geom_histogram(bins = 7, colour = "red", fill = "orange") +
geom_vline(aes(xintercept = mean(SALARIO)), colour = "darkblue", linetype = "dashed", size = 1) +
ggtitle("SALARIO MENSUAL", subtitle = "trabajadores de la empresa XXX")+
xlab("Salario (cientos de euros)") +
ylab("Frecuencias")
curtosis <- kurtosis(datos$SALARIO)
curtosis
ggplot(data = datos, map = aes(x = SALARIO)) +
geom_histogram(bins = 7, colour = "red", fill = "orange", aes(y = ..density..)) +
stat_function(fun = dnorm, args = list(mean = moda, sd = sd(datos$SALARIO)), colour = "darkblue", size = 1) +
ggtitle("SALARIO MENSUAL", subtitle = "trabajadores de la empresa XXX")+
xlab("Salario (cientos de euros)") +
ylab("Densidad")
# Script para la construcción de tablas de datos
# y trabajo con distribuciones de frecuencias univariantes.
# Limpiando el Global Environment
rm(list = ls())
# Cargando paquetes
library(readxl)
library(gtExtras)
library (knitr)
library (kableExtra)
library (dplyr)
library(DescTools)
library(moments)
library (ggplot2)
## DATOS
# Importando datos desde Excel
datos <- read_excel("trabajadores.xlsx",
sheet = "Datos",
na = c("n.d."))
datos <- data.frame(datos, row.names = 1)
# visualizando el data frame de modo elegante con {gtExtras}
datos_df_graph <- gt_plt_summary(datos)
datos_df_graph
tipo_output <- c("html") # pdf, html, docx
knitr::opts_knit$set(rmarkdown.pandoc.to = tipo_output)
if (knitr::opts_knit$get("rmarkdown.pandoc.to") == "html") {
datos %>%
kable(caption = "Trabajadores de Shuttlepod Movers",
col.names = c("Trabajador", "Salario", "Nivel de estudios",
"Departamento")) %>%
kable_styling(full_width = F,
bootstrap_options = "striped", "bordered", "condensed",
position = "center",
font_size = 11) %>%
row_spec(0, bold= T, align = "c") %>%
row_spec(1:(nrow(datos)), bold= F, align = "c")
} else if (knitr::opts_knit$get("rmarkdown.pandoc.to") == "docx") {
kable(caption = "Trabajadores de Shuttlepod Movers",
col.names = c("Trabajador", "Salario", "Nivel de estudios",
"Departamento"))
} else if (knitr::opts_knit$get("rmarkdown.pandoc.to") == "pdf") {
kable(caption = "Trabajadores de Shuttlepod Movers",
col.names = c("Trabajador", "Salario", "Nivel de estudios",
"Departamento")) %>%
kable_styling(latex_options = c("striped", "hold_position"))
}
tipo_output <- c("html") # pdf, html, docx
knitr::opts_knit$set(rmarkdown.pandoc.to = tipo_output)
if (knitr::opts_knit$get("rmarkdown.pandoc.to") == "html") {
datos %>%
kable(caption = "Trabajadores de Shuttlepod Movers",
col.names = c("Trabajador", "Salario", "Nivel de estudios",
"Departamento")) %>%
kable_styling(full_width = F,
bootstrap_options = "striped", "bordered", "condensed",
position = "center",
font_size = 11) %>%
row_spec(0, bold= T, align = "c") %>%
row_spec(1:(nrow(datos)), bold= F, align = "c")
} else if (knitr::opts_knit$get("rmarkdown.pandoc.to") == "docx") {
kable(caption = "Trabajadores de Shuttlepod Movers",
col.names = c("Trabajador", "Salario", "Nivel de estudios",
"Departamento"))
} else if (knitr::opts_knit$get("rmarkdown.pandoc.to") == "pdf") {
kable(caption = "Trabajadores de Shuttlepod Movers",
col.names = c("Trabajador", "Salario", "Nivel de estudios",
"Departamento")) %>%
kable_styling(latex_options = c("striped", "hold_position"))
}
# Distribución de frecuencias del salario de los trabajadores de la empresa.
# Colocar los datos
datos <- datos %>% arrange(SALARIO, row.names(datos))
conteo <- table(datos$SALARIO)
conteo
# Contar frecuencias
conteo <- table(datos$SALARIO)
conteo
# Convertir el resultado a un data frame para una mejor visualización
conteo_df <- as.data.frame(conteo)
conteo_df
# Renombrar las columnas para mayor claridad
colnames(conteo_df) <- c("Valor", "Frecuencia")
# Calcular y guardar la frecuencia total
N <- sum(conteo_df$Frecuencia)
# Calcular frecuencias absolutas acumuladas
conteo_df$Frecuencia_acum <- cumsum(conteo_df$Frecuencia)
# Calcular frecuencias relativas
conteo_df$Frecuencia_R <- conteo_df$Frecuencia / N
# Calcular frecuencias relativas acumuladas
conteo_df$Frecuencia_R_acum <- cumsum(conteo_df$Frecuencia_R)
if (knitr::opts_knit$get("rmarkdown.pandoc.to") == "html") {
conteo_df %>%
kable(caption = "Distribución de frecuencias de salarios. Shuttlepod Movers",
col.names = c("x(i) = Salario", "Frecuencia absoluta n(i)",
"Frecuencia absoluta acum. N(i)", "Frecuencia relativa f(i)",
"Frecuencia relativa acum. F(i)"),
format.args = list(decimal.mark = ".", digits = 2)) %>%
kable_styling(full_width = F,
bootstrap_options = "striped", "bordered", "condensed",
position = "center",
font_size = 11) %>%
row_spec(0, bold= T, align = "c") %>%
row_spec(1:(nrow(conteo_df)), bold= F, align = "c")
} else if (knitr::opts_knit$get("rmarkdown.pandoc.to") == "docx") {
conteo_df %>%
kable(caption = "Distribución de frecuencias de salarios. Shuttlepod Movers",
col.names = c("x(i) = Salario", "Frecuencia absoluta n(i)",
"Frecuencia absoluta acum. N(i)", "Frecuencia relativa f(i)",
"Frecuencia relativa acum. F(i)"),
format.args = list(decimal.mark = ".", digits = 2))
}
